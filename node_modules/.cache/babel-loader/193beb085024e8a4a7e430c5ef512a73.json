{"ast":null,"code":"var _jsxFileName = \"/Users/lendified/Desktop/email-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './Home';\nimport ProductDetails from './ProductDetails';\nimport Products from '../src/MOCK_DATA.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChange = ev => {\n      let filteredArray = [];\n      {\n        /*If search box input is 'nothing' then set 'nameList' data to 'tempList' */\n      }\n\n      if (ev.target.value === '') {\n        filteredArray = [...this.state.nameList];\n      } else {\n        let newList = [...this.state.tempList];\n        filteredArray = newList.filter(item => {\n          return item.name.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        });\n      }\n\n      this.setState({\n        tempList: filteredArray\n      });\n    };\n\n    this.state = {\n      prodList: Products,\n      tempList: []\n    };\n  }\n\n  componentDidMount() {\n    {\n      /* Don't mutate the  'nameList', duplicate it and apply operations on it  */\n    }\n    let newList = [...this.state.nameList];\n    this.setState({\n      tempList: newList\n    });\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      change: this.inputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(NameList, {\n      list: this.state.tempList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: () => React.createElement(Home, {\n        prodList: this.state.prodList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/detail/:id\",\n      component: () => React.createElement(ProductDetails, {\n        prodList: this.state.prodList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst SearchBar = props => {\n  return React.createElement(\"div\", {\n    className: \"search-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search names\",\n    onChange: props.change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nconst NameList = props => {\n  return React.createElement(\"div\", {\n    className: \"name-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.list.map((item, index) => {\n    return React.createElement(\"h1\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, item.name);\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lendified/Desktop/email-app/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Route","Home","ProductDetails","Products","App","constructor","props","inputChange","ev","filteredArray","target","value","state","nameList","newList","tempList","filter","item","name","toLowerCase","search","event","setState","prodList","componentDidMount","render","SearchBar","change","NameList","list","map","index"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './Home';\nimport ProductDetails from './ProductDetails';\n\nimport Products from '../src/MOCK_DATA.json';  \n\n\nclass App extends Component{\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        prodList: Products,\n        tempList:[]\n    }\n    \n  }\n\n  componentDidMount(){\n    {/* Don't mutate the  'nameList', duplicate it and apply operations on it  */}\n    let newList=[...this.state.nameList];\n    this.setState({\n      tempList:newList\n    })\n  }\n  \n  inputChange=(ev)=>{\n    let filteredArray=[];\n    {/*If search box input is 'nothing' then set 'nameList' data to 'tempList' */}\n    if(ev.target.value===''){\n      filteredArray=[...this.state.nameList]\n    }else{\n       let newList=[...this.state.tempList];\n       filteredArray=newList.filter(item=>{\n       return item.name.toLowerCase().search(\n                 event.target.value.toLowerCase()) !== -1\n   }) \n  }\n    this.setState({\n      tempList:filteredArray\n    })\n   \n   }\n\n\n\n\n\n  render(){\n    return(\n      <BrowserRouter>\n        <Fragment>\n        <SearchBar change={this.inputChange}/> \n        <NameList list={this.state.tempList} />\n\n          <Route exact path=\"/\" component={() => (\n            < Home prodList={this.state.prodList} />\n          )}\n          />\n          <Route exact path=\"/detail/:id\" component={() => (\n            < ProductDetails prodList={this.state.prodList} />\n          )} />\n        </Fragment>\n      </BrowserRouter>\n    \n    )\n  }\n}\n\n\n\nconst SearchBar=(props)=>{\n  return(\n     <div className=\"search-bar\">\n      <input type=\"text\" placeholder=\"search names\" onChange={props.change} />\n      </div>\n  )\n}\n\nconst NameList=(props)=>{\n  return(\n     <div className=\"name-list\">\n       {props.list.map((item,index)=>{\n        return(\n          <h1 key={index}>{item.name}</h1>\n        )\n      })}\n      </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}